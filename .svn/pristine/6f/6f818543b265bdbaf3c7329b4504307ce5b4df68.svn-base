<!--
 * @Author: kevin
 * @Date: 2022-02-25 09:42:38
 * @LastEditors: kevin
 * @LastEditTime: 2022-04-21 14:03:45
 * @Description: Do not edit
-->
<template>
  <div class="topbar-left">
    <div class="logo">
      <img src="@/assets/logo.png" height="60"/>
      <h2>目标管理信息评价系统</h2>
    </div>
  </div>
  <div class="topbar-navigation topbar-left">
    <router-link v-for="item in userMenus" :key="item.id" :to="item.path" @click="handleMenu(item)" style="margin-right: 15px">
      <el-button color="#ffffff1a" size="large" type="primary">
        <el-icon><kvIcon :name="item.meta?.icon" /></el-icon> {{ item.meta?.title }}
      </el-button>
    </router-link>
  </div>
  <div class="topbar-info topbar-right" ref="headline">
    <div class="welcome-info">
      欢迎您，{{ userInfo?.name }}
    </div>
    <el-dropdown class="use-name">
      <span class="el-dropdown-link">
        <span @click="downOut" id="useName">{{ userInfo?.name ? userInfo.name.substr(0,1) : '' }}</span>
      </span>
      <template #dropdown>
        <el-dropdown-menu>
          <el-dropdown-item @click="logOut">退出</el-dropdown-item>
        </el-dropdown-menu>
      </template>
    </el-dropdown>

  </div>
</template>

<script>
  import { ref } from 'vue'
  import { useStore } from 'vuex'
  import { useState } from '@/hooks/index'
  import { useRouter } from 'vue-router'
  import { setStaticData } from '@/utils/util'

  export default {
    setup () {
      const store = useStore()
      const router = useRouter()
      const downStatus = ref(false)
      const headline = ref(null) // $refs
      const userInfo = useState(['userInfo'], 'user')
      const userMenus = useState(['userMenus'], 'user')
      const handleMenu = (item) => {
        // 却换时重置分页信息to do...
        store.commit('changerpageSize', 10)
        store.commit('changerCurrentPage', 1)
        router.push(item.path)
        const subMenuList = item.children || []
        store.dispatch('user/changeSubMenusActions', subMenuList)
        const currentPathId = (subMenuList.length > 0 && typeof subMenuList[0].children !== 'undefined' && subMenuList[0].children.length > 0) ? subMenuList[0].children[0].id : subMenuList.length > 0 ? subMenuList[0].id : ''
        store.dispatch('changerCurrentValue', currentPathId)
        setStaticData('defaultActiveValue', currentPathId)
      }

      const downOut = () => {
        downStatus.value = !downStatus.value
      }
      const logOut = () => {
        store.dispatch('user/loginOut')
      }
      // 点击任何区域关闭
      const handleBodyClick = (event) => {
        const sp = headline.value
        if (sp) {
          if (!sp.contains(event.target)) {
            downStatus.value = false
          }
        }
      }
      document.addEventListener('click', handleBodyClick)
      return {
        headline, // $refs
        downOut,
        logOut,
        downStatus,
        handleMenu,
        ...userInfo,
        ...userMenus
      }
    }
  }
</script>
<style lang="less" scoped>
  .router-link-active {
    button {
      background: #3e95ef;
    }
  }
</style>

<!--
 * @Author: kevin
 * @Date: 2022-03-21 11:46:11
 * @LastEditors: kevin
 * @LastEditTime: 2022-04-21 17:37:58
 * @Description: 指标周期
-->
<template>
  <kv-form v-bind="targetSearch" v-model="formData">
    <template #searchBtn>
      <el-button style="margin-left: 10px" type="primary" @click.prevent="onSubmit">搜索</el-button>
    </template>
    <template #handler>
      <el-button type="primary" @click.prevent="handleEdit(null, 'add')">
        <el-icon style="vertical-align: middle">
          <plus />
        </el-icon>添加指标周期
      </el-button>
    </template>
  </kv-Form>
  <kv-table :propList="targetList" baseURL="/cycle/depository" :getDataFn="getListPage" @handleSelectionChange="handleSelectionChange">
    <template #startTime="scope">
      {{ scope.row.startTime ? formatTimestamp(scope.row.startTime, "YYYY-MM-DD HH:mm:ss") : '-' }}
    </template>
    <template #endTime="scope">
      {{ scope.row.endTime ? formatTimestamp(scope.row.endTime, "YYYY-MM-DD HH:mm:ss") : '-' }}
    </template>
    <template #handler="scope">
      <el-link type="primary" size="small" @click="handleEdit(scope.row, 'edit')" underline icon="edit">编辑</el-link>&nbsp;&nbsp;&nbsp;
      <el-link type="danger" size="small" @click="handleRemove(scope.row)" underline icon="delete">删除</el-link>
    </template>
  </kv-table>

  <!-- 模态框 -->
  <kvDialog v-bind="modelConfig" v-model="addModel" v-if="addModel" @cancel="cancel">
    <add-target v-if="addModel" @callBack="confirm" :rowData="rowData" :inuptType="inuptType" />
  </kvDialog>
  <kv-dialog v-bind="kvDialogConfig" v-model="kvDialogConfig.dialogVisible" @callBack="confirm" />

</template>

<script>
import { ref } from 'vue'
import addTarget from './addTarget.vue'
import { targetList, targetSearch } from './config/dataConfig'
import { getListPage } from '@/api/cycle'
import { updateList } from '@/store'
import { formatTimestamp } from '@/utils/formatDate'
export default {
  components: {
    addTarget
  },
  emits: ['change'],
  setup (props, { emit }) {
    const addModel = ref(false)
    const rowData = ref(null)
    const inuptType = ref('add')
    const modelConfig = ref({
      dialogWidth: '600px'
    })
    const kvDialogConfig = ref({
      modeType: 'remove',
      params: '',
      isShowFooter: true,
      dialogVisible: false,
      baseURL: '/cycle'
    })
    const formItems = targetSearch?.formItems ?? []
    const formOriginData = {}
    for (const item of formItems) {
      if (item?.field) {
        formOriginData[item.field] = ''
      }
    }
    const formData = ref(formOriginData)
    const onSubmit = () => {
      updateList(getListPage, formData.value, '/cycle/depository')
    }
    const cancel = () => { }
    const confirm = () => {
      addModel.value = false
      kvDialogConfig.value.dialogVisible = false
      updateList(getListPage, formData.value, '/cycle/depository')
    }
    const handleRemove = (row) => {
      kvDialogConfig.value.dialogVisible = true
      kvDialogConfig.value.params = row.id
    }

    const handleSelectionChange = () => { }
    const handleClick = () => { }

    const handleEdit = (row, type) => {
      rowData.value = row
      inuptType.value = type
      addModel.value = true
    }

    return {
      cancel,
      inuptType,
      modelConfig,
      addModel,
      confirm,
      targetList,
      targetSearch,
      formData,
      rowData,
      kvDialogConfig,
      onSubmit,
      handleSelectionChange,
      handleClick,
      handleEdit,
      handleRemove,
      getListPage,
      formatTimestamp
    }
  }
}

</script>

<style lang="scss" scoped>
</style>

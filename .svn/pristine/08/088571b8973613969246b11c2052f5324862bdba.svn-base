<!--
 * @Author: kevin
 * @Date: 2022-04-29 11:32:12
 * @LastEditors: kevin
 * @LastEditTime: 2022-05-12 10:24:39
 * @Description: 代办事宜
-->
<template>
  <kv-form v-bind="searchConfig" v-model="formData" >
    <template #searchBtn>
      <el-button type="primary" @click.prevent="onSubmit">搜索</el-button>
    </template>
    <template #textLinkBtn>
      <el-link type="primary" :underline="false" style="padding:0 5px 15px 5px" @click="all">全部</el-link>
      <el-link type="primary" :underline="false" style="padding:0 5px 15px 5px" @click="unread">未读</el-link>
      <el-link type="primary" :underline="false" style="padding:0 5px 15px 5px" @click="read">已读</el-link>
    </template>
  </kv-form>
  <kv-table
    :propList="targetList"
    :getDataFn="getwatiList"
    @handleSelectionChange="handleSelectionChange"
    :showFooter="false"
  >
    <template #times="scope">
      {{ formatTimestamp(scope.row.times, 'YYYY-MM-DD') }}
    </template>
    <template #handler="scope">
      <el-link type="primary" size="small" @click="handleAddTemplate(scope.row)" underline icon="edit">办理</el-link>&nbsp;&nbsp;&nbsp;
    </template>
  </kv-table>
  <kvDialog v-bind="editDialog" v-model="editDialog.dialogVisible">
    <edit-target :rowData="subRowData" @callBack="cancel" />
  </kvDialog>
  <!-- <kvDialog v-bind="reportDialog" v-model="reportDialog.dialogVisible" @callBack="cancel"></kvDialog> -->
</template>

<script setup>
import { reactive } from 'vue'
import { targetList } from './config/dataConfig'
import { getwatiList } from '@/api/todoList'
// import { useState } from '@/hooks/index'
import { formatTimestamp } from '@/utils/formatDate.js'
import { handeles } from './config/hooks'
import editTarget from './editTarget.vue'
const formData = reactive({})
// const { userInfo } = useState(['userInfo'], 'user')
const handleSelectionChange = () => {}
const onSubmit = () => {}
const {
  handleAddTemplate,
  cancel,
  searchConfig,
  subRowData,
  // targetDialog
  editDialog
} = handeles()
</script>

<style scoped>

</style>
